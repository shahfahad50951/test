FILE IS A STRUCTURE IN C (MADE UP OF PRIMITIVE DATATYPES), WHICH HOLD THE INFORMATION
OF A OPENED FILE IN A C PROGRAM, AND THE CURRENT STATE OF THE FILE.
THE INFORMATION INCLUDE, TILL WHICH CHARACTER THE PROGRAM HAS READ, ON WHICH CHARACTER 
PROGRAM IS ON AND STATUS OF EOF INDICATOR FOR THE FILE AND OTHER INFORMATION.

EVERY LOADED FILE HAS ITS OWN FILE STRUCTURE.
EOF IS A INDICATOR AND IS SET BY OPERATING SYSTEM, THIS MEANS THAT WHEN A PROGRAM
HAS READ ALL THE CHARACTER FROM THE FILE AND TRIES TO READ AGAIN, IT IS NOT ABLE TO READ.
NOW THE EOF INDICATORE OF THE FILE STRUCTURE OF OPENED FILE IS CHANGED BY OS TO REPRESENT
THAT THIS PROGRAM HAS REACHED THE EOF OF THE OPENED FILE.

IF ANY FUNCTION TRIES TO READ A CHARACTER BEYOND THE LAST CHARACTER OF THE STREAM (FILE),
THE FUNCTION FAILS TO READ THE CHARACTER AND THE EOF INDICATOR OF THE STREAM IS CHANGED BY
THE OPERATING SYSTEM TO INDICATE THAT EOF IS REACHED.
THE FUNCTION CAN ACCESS THIS EOF INDICATOR ANY TIME TO CHECK IF EOF STATUS IS INDICATING EOF.
 
the function feof(FILE *pointer_to_file) is used to access eof indicator of the
file stream in c language.

MANY STANDARD LIBRARY INPUT FUNCTIONS LIKE, FGETS() OR GETCHAR() AND MANY MORE USE
THE ABOVE feof() FUNCTION TO CHECK IF THEY HAVE REACHED THE END OF FILE. IF THEY REACH
END OF FILE THEY RETURN EOF VALUE TO THE CALLER FUNCTION.

THUS WE SEE THAT EOF IS NOT A CHARACTER BUT AN INDICATOR WHICH INDICATES THAT EOF IS REACHED
FOR A FILE.

ALSO THE PROCEDURE IS MORE OR LESS THE SAME FOR DETECTING EOF ON ANY OPERATING SYSTEM.
